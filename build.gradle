apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-parcelize'  // to send safeArgs between different fragments we must parcelize
apply plugin: "androidx.navigation.safeargs.kotlin"  //id 'androidx.navigation.safeargs'
apply plugin: 'dagger.hilt.android.plugin'
apply plugin: 'maven-publish'  // CHECK:PM needed for jitpack.io?
// for reading passwords from local.properties
apply plugin: 'com.google.android.libraries.mapsplatform.secrets-gradle-plugin'

repositories {
  mavenCentral()
  google()
  maven { url 'https://jitpack.io' } // for publishing
//  mavenCentral()
}

android {
  compileSdkVersion 31
  buildToolsVersion "30.0.2"

  defaultConfig {
    minSdkVersion 28
    //noinspection OldTargetApi,ExpiredTargetSdkVersion
    targetSdkVersion 30

    // testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
    consumerProguardFiles 'consumer-rules.pro'


    // TODO use secrets-gradle-plugin (like w/ gmaps api)
    // INFO: read keys from secure.properties exports them into strings
    def secureProps = new Properties()
    if (file("../local.properties").exists()) {
      file("../local.properties")?.withInputStream { secureProps.load(it) }
    }
    resValue "string", "server_google_oauth_client_id", (
            secureProps.getProperty("SERVER_GOOGLE_OAUTH_CLIENT_ID") ?: "")
  }

  buildTypes {
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
    }
  }
  packagingOptions {
    resources {
      excludes += ['META-INF/DEPENDENCIES']
    }
  }
  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }
  kotlinOptions {
    jvmTarget = '11'
  }
  buildFeatures {
    dataBinding true
    viewBinding true
  }
  androidResources {
    noCompress 'tflite'
  }
}



dependencies {
  implementation fileTree(dir: "libs", include: ["*.jar"])

  // CORE
  //// KOTLIN
  //  implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$ver_kotlin" CLR
//  implementation "org.jetbrains.kotlin:kotlin-stdlib:$ver_kotlin"
  implementation "androidx.core:core-ktx:1.7.0"
  //// UI/Compatibility
  implementation 'androidx.appcompat:appcompat:1.3.1'
  implementation 'com.google.android.material:material:1.4.0'
  implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
  //// LIFECYCLE (without ViewModel or LiveData)
  implementation "androidx.lifecycle:lifecycle-runtime-ktx:$ver_lifecycle"
  implementation "androidx.lifecycle:lifecycle-service:$ver_lifecycle"
  //// UI NAVIGATION
  implementation "androidx.navigation:navigation-fragment-ktx:$ver_nav"
  implementation "androidx.navigation:navigation-ui-ktx:$ver_nav"
  //// Coordinator Layout
  implementation "androidx.coordinatorlayout:coordinatorlayout:1.1.0"
  //// COROUTINES
  implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$ver_coroutines"
  implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$ver_coroutines"
  ////// Lifecycle
  implementation "androidx.lifecycle:lifecycle-extensions:2.2.0"
  implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.3.1"
  implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.1"
  implementation "androidx.lifecycle:lifecycle-livedata-ktx:2.3.1"


  //// DEPENDENCY INJECTION (dagger/hilt)
  implementation "com.google.dagger:hilt-android:2.40.5"
  kapt 'com.google.dagger:hilt-compiler:2.40.5'
//  kapt "com.google.dagger:hilt-android-compiler:2.35"

  implementation 'androidx.legacy:legacy-support-v4:1.0.0'
  implementation 'androidx.preference:preference-ktx:1.1.1'
  implementation 'androidx.annotation:annotation:1.3.0'
//  kapt 'org.jetbrains.kotlinx:kotlinx-metadata-jvm:0.2.0'

  // GOOGLE SERVICES
  //// FusedLocation (coarse/fine grain)
  implementation 'com.google.android.gms:play-services-location:18.0.0'
  //// GOOGLE MAPS & UTILS
  implementation 'com.google.android.gms:play-services-maps:17.0.1'
  implementation 'com.google.maps.android:android-maps-utils:2.2.2' // updated from 0.3 !

  // Material Components
  implementation 'com.google.android.material:material:1.4.0-rc01'

  // Room components
  api "androidx.room:room-runtime:2.3.0"
  kapt "androidx.room:room-compiler:2.3.0"
  implementation "androidx.room:room-ktx:2.3.0"
  androidTestImplementation "androidx.room:room-testing:2.3.0"

  // Data binding
  kapt "com.android.databinding:compiler:3.2.0-alpha10"
  kapt "androidx.databinding:databinding-common:7.0.0"

  // DataStore (new preferences)
  implementation "androidx.datastore:datastore-preferences:1.0.0-rc02"

  // Recyclerview
  implementation 'androidx.recyclerview:recyclerview:1.2.1'

  // Retrofit
  implementation 'com.squareup.retrofit2:retrofit:2.9.0'
  implementation 'com.squareup.retrofit2:converter-gson:2.9.0'

  // MISC
  implementation 'pub.devrel:easypermissions:3.0.0'



  /////////////////
  // ANYPLACE CORE (java lib)
  //  implementation 'com.github.dmsl:anyplace-lib-core:4.0.2'
  // local include requires pulling the submodules (see README)
  implementation project(path: ':lib-core') // local

  implementation 'gov.nist.math:jama:1.0.3'

  // implementation 'com.google.api-client:google-api-client:1.31.4'
  // implementation 'com.google.http-client:google-http-client:1.39.2'
  // implementation 'google-http-client-jackson2'
  implementation 'com.google.http-client:google-http-client-jackson2:1.39.2'
  // implementation 'com.google.http-client:google-http-client:1.39.2'

  // implementation 'com.google.http-client:google-http-client:1.39.2'

  implementation 'com.google.code.gson:gson:2.8.6'
  implementation 'org.apache.httpcomponents:httpmime:4.5.13'

  // Shimmer
  implementation 'com.facebook.shimmer:shimmer:0.5.0'

  // Google Sign-In
  implementation 'com.google.android.gms:play-services-auth:19.2.0'

  // AP-CV (Computer Vision)
  //// CameraV2
  implementation "androidx.camera:camera-camera2:1.0.1"
  implementation "androidx.camera:camera-lifecycle:1.0.1"
  implementation "androidx.camera:camera-view:1.0.0-alpha28"


  ////  Deep-Learning engine
  implementation 'org.tensorflow:tensorflow-lite:2.2.0'
  implementation 'org.tensorflow:tensorflow-lite-gpu:2.2.0'
  // INCOMPATIBLE with some models:
  // implementation 'org.tensorflow:tensorflow-lite:2.3.0'
  // implementation 'org.tensorflow:tensorflow-lite-gpu:2.3.0'


  // TESTING
  // testImplementation 'junit:junit:4.12'
  // androidTestImplementation 'androidx.test.ext:junit:1.1.1'
  // androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0'
}

/** JitPack Publishing: **/
// Because the components are created only during the afterEvaluate phase,
// publications must use the afterEvaluate() lifecycle method.
def GROUP = 'com.github.dmsl'
def ARTIFACT_ID="anyplace-lib-android"
def VERSION_NAME="4.1.0"

afterEvaluate {
  publishing {
    publications {
      release(MavenPublication) {  // Creates a Maven publication called "release".
        from components.release   // Applies the component for the release build variant.
        groupId = GROUP
        artifactId = ARTIFACT_ID
        version = VERSION_NAME
      }
      debug(MavenPublication) {  // Creates a Maven publication called “debug”.
        from components.debug    // Applies the component for the debug build variant.
        groupId = GROUP
        artifactId = ARTIFACT_ID
        version = VERSION_NAME
      }
    }
  }
}